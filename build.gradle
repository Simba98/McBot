buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'cn.evolvefield.mods'
version = '1.19.2-1.9.0'

java {
    archivesBaseName = 'botapi'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {

    mappings channel: 'official', version: '1.19.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Comma-separated list of namespaces to load gametests from. Empty = all namespaces.
            property 'forge.enabledGameTestNamespaces', 'botapi'

            mods {
                botapi {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'botapi'

            mods {
                botapi {
                    source sourceSets.main
                }
            }
        }

        // This run config launches GameTestServer and runs all registered gametests, then exits.
        // By default, the server will crash when no gametests are provided.
        // The gametest system is also enabled by default for other run configs under the /test command.
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'botapi'

            mods {
                botapi {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'botapi', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                botapi {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "botapi.refmap.json"

    config "botapi.mixins.json"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
    // flatDir {
    //     dir 'libs'
    // }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.24'
    //implementation 'org.java-websocket:Java-WebSocket:1.5.3'
    //implementation 'javax.websocket:javax.websocket-api:1.1'
    //compileOnly 'cn.evolvefield.mods.botapi.util.fastjson:fastjson2:2.0.13.graal'
    //runtimeOnly 'cn.evolvefield.mods.botapi.util.fastjson:fastjson2:2.0.13.graal'
    //implementation 'org.springframework:spring-websocket:5.3.22'
    //implementation 'io.netty:netty-codec-http:4.1.77.Final'
    //implementation 'jakarta.annotation:jakarta.annotation-api:1.3.5'
    //implementation 'cn.hutool:hutool-all:5.8.8'

    //annotationProcessor 'cn.hutool:hutool-all:5.8.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    //annotationProcessor 'org.java-websocket:Java-WebSocket:1.5.3'
    //annotationProcessor 'javax.websocket:javax.websocket-api:1.1'
    //annotationProcessor 'cn.evolvefield.mods.botapi.util.fastjson:fastjson2:2.0.13.graal'
    //annotationProcessor 'org.springframework:spring-websocket:5.3.22'
    //annotationProcessor 'io.netty:netty-codec-http:4.1.77.Final'
    //annotationProcessor 'jakarta.annotation:jakarta.annotation-api:1.3.5'


    //implementation 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.4.48.v20220622'
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.25'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "botapi",
                "Specification-Vendor"    : "cnlimiter",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "cnlimiter",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
