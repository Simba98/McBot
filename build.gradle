plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = project.version_prefix + "-" + project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven {
        url 'https://maven.nova-committee.cn/releases'
    }
    maven { url "https://maven.nucleoid.xyz/" }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    compileOnly 'org.projectlombok:lombok:1.18.24'
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${project.minecraft_version}:${project.parchement_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation include("cn.evolvefield.bot:OneBot-Client:${project.client_version}")
    modImplementation include("blue.endless:jankson:${project.jankson_version}")

    annotationProcessor "cn.evolvefield.bot:OneBot-Client:${project.client_version}"
    annotationProcessor "org.projectlombok:lombok:1.18.24"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}


java {
    archivesBaseName = project.archives_base_name
    withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 8
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            version = "${project.version_prefix}" + "-" + "${project.mod_version}"
            artifactId = "${project.archives_base_name}"
            groupId = "${project.maven_group}"
            pom {
                name = 'Bot Connect'
                description = 'Adds chat linking between QQ and Minecraft and QQ commands to request server data.'
                url = 'https://www.evolvefield.cn/article/14'
                licenses {
                    license {
                        name = 'AGPLV3'
                        url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                    }
                }
                developers {
                    developer {
                        id = 'cnlimiter'
                        name = 'cnlimiter'
                        email = 'cnlimiter@163.com'
                    }
                }
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        if (System.getenv('MAVEN_USERNAME') != null && System.getenv('MAVEN_PASSWORD') != null) {
            maven {
                name 'release'
                url = 'https://maven.nova-committee.cn/releases'

                credentials {
                    username System.getenv('MAVEN_USERNAME')
                    password System.getenv('MAVEN_PASSWORD')
                }
            }
        }
    }
}
